version: 2.1

# our defined job, and its steps
jobs:
  v3-achorage-checkout:
    machine:
      image: ubuntu-2204:2022.07.1
      resource_class: medium
    steps:
      #modifying the usual checkout step so that we can clone two projects into a directory ~/project/<>
      - run: git clone -b "$CIRCLE_BRANCH" "$CIRCLE_REPOSITORY_URL" v3-erigon/
      - run: git clone https://github.com/bobanetwork/v3-anchorage v3-anchorage/
      - persist_to_workspace:
          root: "."
          paths:
            - "v3-erigon/"
            - "v3-anchorage/"

  go-e2e-test:
    parameters:
      module:
        description: Go Module Name
        type: string
      target:
        description: The make target to execute
        type: string
    docker:
      - image: us-docker.pkg.dev/${GCP_PROJECT_ID}/${GCP_ARTIFACT_REPOSITORY}/images/ci-builder:latest
    resource_class: xlarge
    steps:
      - attach_workspace: { at: "." }
      - run:
          name: Modify target Erigon
          command: |
            cp ~/project/v3-erigon/go.mod ~/project/v3-anchorage/op-erigon/go.mod
            cd ~/project/v3-anchorage/op-erigon 
            go mod edit -module="github.com/ethereum-optimism/optimism/op-erigon" && go mod edit -replace "github.com/ledgerwatch/erigon=github.com/bobanetwork/v3-erigon@$CIRCLE_SHA1" 
            go mod tidy
      - run:
          name: prep results dir
          command: mkdir -p /tmp/test-results
          working_directory: ~/project/v3-anchorage
      - run:
          name: install geth
          command: make install-geth
          working_directory: ~/project/v3-anchorage
      - run:
          name: git submodules
          command: git submodule update --init --recursive
          working_directory: ~/project/v3-anchorage
      - run:
          name: print go's available MIPS targets
          command: go tool dist list | grep mips
          working_directory: ~/project/v3-anchorage
      - run:
          name: run tests
          command:
            # Note: We don't use circle CI test splits because we need to split by test name, not by package. There is an additional
            # constraint that gotestsum does not currently (nor likely will) accept files from different pacakges when building.
            JUNIT_FILE=/tmp/test-results/<<parameters.module>>_<<parameters.target>>.xml make <<parameters.target>>
          working_directory: ~/project/v3-anchorage/<<parameters.module>>
      - store_test_results:
          path: /tmp/test-results

workflows:
  main:
    jobs:
      - v3-achorage-checkout           
      - go-e2e-test:
          name: op-e2e-ext-erigon-tests
          module: op-e2e
          target: test-external-erigon
          requires:
            - v3-achorage-checkout    
